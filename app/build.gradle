plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

apply from: './gradleScript/dependencies.gradle'

android {
    def file = rootProject.file("local.properties")

    compileSdk 32

    defaultConfig {
        applicationId "com.ruben.epicworld"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        buildConfigField 'String', 'BASE_URL', "\"https://api.rawg.io/\""
        if (file.exists()) {
            def localProperties = new Properties()
            localProperties.load(new FileInputStream(file))
            buildConfigField 'String', 'API_KEY', "\"" + localProperties['api.key'] + "\""
        } else {
            buildConfigField 'String', 'API_KEY', "\"" + System.getenv("API_KEY") + "\""
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.1.0-alpha06'
        kotlinCompilerVersion '1.5.31'
    }
    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
            excludes += '**/attach_hotspot_windows.dll'
            excludes += 'META-INF/licenses/**'
            excludes += 'META-INF/AL2.0'
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn", "-Xjvm-default=enable"]
        }
    }
}